"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from django.conf import settings
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=False, cast=bool)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # my app
    "helpers",
    "contact",
    "accounts",
    "corrections",
    # drf rest
    "rest_framework",
    "django_filters",
    "django_extensions",
    "drf_spectacular",
    # swagger ui
    "drf_yasg",
    # jwt token authentication
    "rest_framework_simplejwt",
    # jwt token blacklist
    "rest_framework_simplejwt.token_blacklist",
    # google auth apps
    "dj_rest_auth",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "dj_rest_auth.registration",
    "rest_framework.authtoken",
]

## <== google auth apps ==>
SITE_ID = 1

REST_USE_JWT = True

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": ["profile", "email"],
        "AUTH_PARAMS": {"access_type": "online"},
    }
}

# Google Client ID ve Secret bilgilerinizi buraya ekleyin
SOCIALACCOUNT_PROVIDERS["google"]["APP"] = {
    "client_id": "60263067117-hi3jgokuu3g7qbgfo2rr6t75p25cmc04.apps.googleusercontent.com",
    "secret": "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",
    "key": "",
}


## <== DRF yapılandırması ==>
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_FILTER_BACKENDS": ["django_filters.rest_framework.DjangoFilterBackend"],
}

## <== Auth User Model ==>
AUTH_USER_MODEL = "accounts.User"

## <== Reset Token Timeout ==>
PASSWORD_RESET_TIMEOUT = 86400  # 15 dq = 900 san (default saniye cinsinden)


## <== Simple JWT ==>

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=int(config('ACCESS_TOKEN_LIFETIME'))),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=int(config('REFRESH_TOKEN_LIFETIME'))),
    'ROTATE_REFRESH_TOKENS': config('ROTATE_REFRESH_TOKENS', default=False, cast=bool),
    'BLACKLIST_AFTER_ROTATION': config('BLACKLIST_AFTER_ROTATION', default=False, cast=bool),
    'UPDATE_LAST_LOGIN': config('UPDATE_LAST_LOGIN', default=False, cast=bool),
    'ALGORITHM': config('ALGORITHM', default='HS256'),
    'SIGNING_KEY': config('SIGNING_KEY'),  # Gizli anahtar
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=int(config('SLIDING_TOKEN_LIFETIME'))),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=int(config('SLIDING_TOKEN_REFRESH_LIFETIME'))),
    'USER_ID_FIELD': config('USER_ID_FIELD', default='id'),
    'USER_ID_CLAIM': config('USER_ID_CLAIM', default='user_id'),
    'AUTH_HEADER_TYPES': tuple(config('AUTH_HEADER_TYPES', default='Bearer').split(',')),
    'AUTH_HEADER_NAME': config('AUTH_HEADER_NAME', default='HTTP_AUTHORIZATION'),
    'AUTH_TOKEN_CLASSES': tuple(config('AUTH_TOKEN_CLASSES', default='rest_framework_simplejwt.tokens.AccessToken').split(',')),
    'TOKEN_TYPE_CLAIM': config('TOKEN_TYPE_CLAIM', default='token_type'),
    'TOKEN_USER_CLASS': config('TOKEN_USER_CLASS', default='rest_framework_simplejwt.models.TokenUser'),
    'JTI_CLAIM': config('JTI_CLAIM', default='jti'),
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': config('SLIDING_TOKEN_REFRESH_EXP_CLAIM', default='refresh_exp'),
}
## <== Simple JWT ==>


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    #
    ## <== Google Login ==>
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {"min_length": 8},  # Minimum uzunluğu 12 karakter olarak ayarlama
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = config("TIME_ZONE", default="UTC")

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


## <== STMP ==>
EMAIL_BACKEND = config("EMAIL_BACKEND")
EMAIL_HOST = config("EMAIL_HOST")
EMAIL_PORT = config("EMAIL_PORT", cast=int)
EMAIL_USE_TLS = config("EMAIL_USE_TLS", cast=bool)
EMAIL_HOST_USER = config("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = config("DEFAULT_FROM_EMAIL")
FRONTEND_URL = config("FRONTEND_URL")
